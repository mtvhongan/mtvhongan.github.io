// Auth system Prisma schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  passwordHash String
  fullName     String
  phone        String?
  address      String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userRoles    UserRole[]
  refreshTokens RefreshToken[]
}

model Role {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?
  userRoles       UserRole[]
  rolePermissions RolePermission[]
}

model Permission {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?
  rolePermissions RolePermission[]
}

model UserRole {
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  role      Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId    Int
  createdAt DateTime @default(now())

  @@id([userId, roleId])
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int
  createdAt    DateTime   @default(now())

  @@id([roleId, permissionId])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}